(@go
(@go
	0 2
	mem rsp 8 <- r13
	mem rsp 0 <- r12
	call input 0
	rdi <- rax
	rsi <- 1
	call allocate 2
	rdi <- rax
	r12 <- rdi
	call print 1
	rdi <- r12
	mem rsp -8 <- :arrayInit
	call @initArray 1
	:arrayInit
	rdi <- rax
	r12 <- rdi
	mem rsp -8 <- :gotMax
	call @getMax 1
	:gotMax
	rdi <- r12
	r13 <- rax
	call print 1
	rdi <- r12
	rsi <- r13
	rdx <- mem rdi 0
	mem rsp -8 <- :fini
	call @finnish 3
	:fini
	r12 <- mem rsp 0
	r13 <- mem rsp 8
	return
)

(@initArray
	1 3
	mem rsp 16 <- r14
	mem rsp 8 <- r13
	mem rsp 0 <- r12
	r12 <- 0
	r14 <- rdi
	rsi <- mem rdi 0
	r13 <- rsi
	:BEGIN
	call input 0
	rdi <- r14
	rsi <- r12
	rsi++
	r12 <- rsi
	rdx @ rdi rsi 8
	mem rdx 0 <- rax
	cjump rsi < r13 :BEGIN
	rax <- rdi
	r12 <- mem rsp 0
	r13 <- mem rsp 8
	r14 <- mem rsp 16
	return
)

(@getMax
	1 0
	rsi <- 1
	rdx <- 0
	r8 <- mem rdi 0
	:continue
	rdx++
	cjump r8 < rdx :END
	rcx @ rdi rdx 8
	r9 <- mem rcx 0
	cjump r9 < rsi :continue
	rsi <- r9
	goto :continue
	:END
	rax <- rsi
	return
)

(@finnish
	3 4
	mem rsp 24 <- r15
	mem rsp 16 <- r14
	mem rsp 8 <- r13
	mem rsp 0 <- r12
	r12 <- rdx
	r15 <- 0
	r14 <- rsi
	r13 <- rdi
	:outer
	r15++
	cjump r15 < r12 :END2
	rcx <- 0
	rdx <- r14
	rsi @ r13 r15 8
	rdi <- rsi
	:inner
	rcx++
	cjump r12 < rcx :print
	rsi @ r13 rcx 8
	r8 <- mem rsi 0
	cjump r8 < rdx :newMin
	goto :inner
	:newMin
	rdx <- r8
	rdi <- rsi
	goto :inner
	:print
	mem rdi 0 <- r14
	rdi <- rdx
	call print 1
	goto :outer
	:END2
	rax <- 0
	r12 <- mem rsp 0
	r13 <- mem rsp 8
	r14 <- mem rsp 16
	r15 <- mem rsp 24
	return
)

)
